name: Deploy Images to GHCRAdd commentMore actions

permissions:
  packages: write

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract version from pyproject.toml
        id: version
        run: echo "VERSION=$(sed -n 's/^version = \"\([^"]*\)\"/\1/p' pyproject.toml)" >> .env

      - name: Create Tag
        run: |
          TAG=${ENVIRONMENT}-$(sed -n 's/^version = \"\([^"]*\)\"/\1/p' pyproject.toml)-${GITHUB_SHA}
          echo "TAG=$TAG" >> .env

      - name: Export variables to env-file
        run: cp .env env-file

      - name: Export version and tag
        run: cat env-file

      - name: Upload environment file
        uses: actions/upload-artifact@v4
        with:
          name: env-file
          path: env-file
          if-no-files-found: error

  docker-build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v3

      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download environment file
        uses: actions/download-artifact@v4
        with:
          name: env-file
          path: .

      - name: Recreate .env from env-file
        run: mv env-file .env

      - name: Load environment variables
        run: |
          source .env
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      
      - name: 'Build and Push Docker Image'
        run: |
          docker build . \
            --tag ghcr.io/${{ github.repository_owner }}/poker-calculator:latest
          docker push ghcr.io/${{ github.repository_owner }}/poker-calculator:latest

      - name: 'Deploy'
        run: |
          eval $(ssh-agent -s)
          echo "${{ secrets.DEPLOY_KEY }}" | ssh-add -
          ssh -o StrictHostKeyChecking=no -t ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "bash ${{ secrets.DEPLOY_FOLDER }}/${{ secrets.DEPLOY_SCRIPT_SH }}"